[gd_scene load_steps=4 format=2]

[ext_resource path="res://assets/study/script_class/buddy_orange.png" type="Texture" id=2]

[sub_resource type="GDScript" id=1]
script/source = "extends Sprite

#godot的自定义信号就是在信号发送方设置一个信号发射器，然后在接收方写处理逻辑
#该例子中，我们的信号发送方是 Timer 节点，信号接收方 Sprite 节点。
#因此当我们需要设置自定义信号时，
#	1.需要将自定义信号设置在 Timer 节点，
#	2.自定义信号的处理逻辑 写在 Sprite 的方法上。

func _ready():
	pass

func _on_Timer_custom_signal(num,str1,arr,dict):
	print(\"custom signal\",num,str1,arr,dict)
	pass
"

[sub_resource type="GDScript" id=2]
script/source = "extends Timer

signal custom_signal

func _ready():
#	这里是信号连接的代码实现方式
#	var node:Sprite = get_node(\"../Sprite\")
#	connect(\"custom_signal\",node,\"_on_Timer_custom_signal\")
	pass


func _on_Timer_timeout():
	var node:Sprite = get_node(\"../Sprite\")
	node.visible = !node.visible
	emit_signal(\"custom_signal\",3,\"1\",[1, 2, 3],{\"key\": \"value\", 2: 3})
	pass
"

[node name="Node2D" type="Node2D"]

[node name="Sprite" type="Sprite" parent="."]
position = Vector2( 153.932, 116.157 )
texture = ExtResource( 2 )
script = SubResource( 1 )

[node name="Timer" type="Timer" parent="."]
autostart = true
script = SubResource( 2 )

[connection signal="custom_signal" from="Timer" to="Sprite" method="_on_Timer_custom_signal"]
[connection signal="timeout" from="Timer" to="Timer" method="_on_Timer_timeout"]
